{"version":3,"file":"lib_index_js.0c8b942ddb5efde6a471.js","mappings":";;;;;;;;;;;;;;;;;AAAwD;AACV;AAE9C,MAAM,cAAc,GAAG,SAAS,CAAC;AAE1B,KAAK,UAAU,UAAU,CAC9B,QAAgB,EAChB,OAAoB,EAAE;IAEtB,MAAM,QAAQ,GAAG,kEAAgB,CAAC,YAAY,CAAC;QAC3C,OAAO,EAAE,wBAAwB;QACnC,KAAK,EAAE,sBAAsB;KAC9B,CAAC,CAAC;IACH,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,OAAO,CAAC;IAC7B,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC;IAE3B,MAAM,UAAU,GAAG,yDAAM,CAAC,IAAI,CAAC,wBAAwB,EAAE,cAAc,CAAC,CAAC;IACzE,sCAAsC;IACtC,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,CAAE,gBAAgB;IACrC,IAAI,CAAC,WAAW,GAAG,aAAa,CAAC,CAAE,gBAAgB;IAEnD,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC;IAEvB,IAAI,QAAkB,CAAC;IACvB,IAAI;QACA,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC;QACnB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC;QACjB,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC;QACvB,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC;QACvB,QAAQ,GAAG,MAAM,kEAAgB,CAAC,WAAW,CAAC,UAAU,EAAE,IAAI,EAAE,QAAQ,CAAC,CAAC;KAC3E;IAAC,OAAO,KAAK,EAAE;QACd,MAAM,IAAI,kEAAgB,CAAC,YAAY,CAAC,IAAI,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;KACnE;IAED,MAAM,IAAI,GAAG,MAAM,QAAQ,CAAC,IAAI,EAAE,CAAC;IAEnC,IAAI,CAAC,QAAQ,CAAC,EAAE,EAAE;QAChB,MAAM,IAAI,kEAAgB,CAAC,aAAa,CAAC,QAAQ,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;KAClE;IAED,OAAO,IAAI,CAAC;AACd,CAAC;;;;;;;;;;;;;;;;;;ACrCuD;AACjB;AAEvC;;GAEG;AACH,IAAU,UAAU,CAEnB;AAFD,WAAU,UAAU;IACL,wBAAa,GAAW,sBAAsB,CAAC;AAC9D,CAAC,EAFS,UAAU,KAAV,UAAU,QAEnB;AAED;;GAEG;AACH,MAAM,SAAS,GAAgC;IAC7C,EAAE,EAAE,uBAAuB;IAC3B,WAAW,EAAE,iBAAiB;IAC9B,SAAS,EAAE,IAAI;IACf,QAAQ,EAAE,CAAC,kEAAgB,CAAC;IAC5B,QAAQ,EAAE,CACR,GAAoB,EACpB,eAAiC,EACjC,EAAE;QACF,OAAO,CAAC,GAAG,CAAC,iDAAiD,CAAC,CAAC;QAE/D,wBAAwB;QACxB,GAAG,CAAC,QAAQ,CAAC,UAAU,CAAC,UAAU,CAAC,aAAa,EAAE;YAChD,KAAK,EAAE,wBAAwB;YAC/B,SAAS,EAAE,GAAG,EAAE,CACd,eAAe,CAAC,aAAa,KAAK,IAAI;gBACtC,eAAe,CAAC,aAAa,KAAK,GAAG,CAAC,KAAK,CAAC,aAAa;YAC3D,OAAO,EAAE,KAAK,IAAI,EAAE;gBAClB,IAAI,CAAC,eAAe,CAAC,UAAU,EAAE;oBAC/B,OAAO;iBACR;gBACD,MAAM,SAAS,GAAW,eAAe,CAAC,UAAU,CAAC,KAAK,CAAC,WAAW,CAAC,MAAM,CAAC;gBAC5E,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC;gBACxB,IAAI;oBACF,MAAM,QAAQ,GAAG,MAAM,oDAAU,CAC/B,QAAQ,EACR;wBACE,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,EAAE,IAAI,EAAE,SAAS,EAAE,CAAC;wBACzC,MAAM,EAAE,MAAM;qBACf,CACF,CAAC;oBACA,MAAM,WAAW,GAAG,QAAQ,CAAC,WAAW,CAAC;oBACzC,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC;oBAC1B,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC;oBAE1B,eAAe,CAAC,UAAU,CAAC,KAAK,CAAC,WAAW,CAAC,MAAM,GAAG,eAAe,CAAC,UAAU,CAAC,KAAK,CAAC,WAAW,CAAC,MAAM,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;iBAC/H;gBAAC,OAAO,KAAK,EAAE;oBACd,OAAO,CAAC,KAAK,CAAC,iCAAiC,EAAE,KAAK,CAAC,CAAC;iBACzD;YACH,CAAC;SACF,CAAC,CAAC;QAEH,kCAAkC;QAClC,GAAG,CAAC,WAAW,CAAC,OAAO,CAAC;YACtB,OAAO,EAAE,UAAU,CAAC,aAAa;YACjC,QAAQ,EAAE,cAAc;SACzB,CAAC,CAAC;IACL,CAAC;CACF,CAAC;AAEF,iEAAe,SAAS,EAAC","sources":["webpack://codecompletion/./src/handler.ts","webpack://codecompletion/./src/index.ts"],"sourcesContent":["import { ServerConnection } from '@jupyterlab/services';\nimport { URLExt } from '@jupyterlab/coreutils'\n\nconst LLAMA2_API_URL = '/llama2';\n\nexport async function requestAPI<T>(\n  endpoint: string,\n  init: RequestInit = {}\n): Promise<T> {\n  const settings = ServerConnection.makeSettings({\n      baseUrl: 'http://localhost:8000/', // Change to your desired base URL\n    wsUrl: 'ws://localhost:8000/' \n  });\n  console.log(settings.baseUrl)\n  console.log(LLAMA2_API_URL)\n  \n  const requestUrl = URLExt.join(\"http://localhost:8000/\", LLAMA2_API_URL);\n  // Update init with CORS configuration\n  init.mode = 'cors';  // Add this line\n  init.credentials = 'same-origin';  // Add this line\n\n  console.log(requestUrl)\n  \n  let response: Response;\n  try {\n      console.log(\"init\")\n      console.log(init)\n      console.log(\"settings\")\n      console.log(settings)\n    response = await ServerConnection.makeRequest(requestUrl, init, settings);\n  } catch (error) {\n    throw new ServerConnection.NetworkError(new Error(String(error)));\n  }\n\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new ServerConnection.ResponseError(response, data.message);\n  }\n\n  return data;\n}\n","import {\n  JupyterFrontEnd,\n  JupyterFrontEndPlugin,\n} from '@jupyterlab/application';\nimport { INotebookTracker } from '@jupyterlab/notebook';\nimport { requestAPI } from './handler';\n\n/**\n * The command IDs used by the extension.\n */\nnamespace CommandIDs {\n  export const getCompletion: string = 'llama2:getCompletion';\n}\n\n/**\n * The JupyterLab plugin.\n */\nconst extension: JupyterFrontEndPlugin<void> = {\n  id: 'codecompletion:plugin',\n  description: 'code completion',\n  autoStart: true,\n  requires: [INotebookTracker],\n  activate: (\n    app: JupyterFrontEnd,\n    notebookTracker: INotebookTracker\n  ) => {\n    console.log('JupyterLab extension my_extension is activated!');\n\n    // Register the command.\n    app.commands.addCommand(CommandIDs.getCompletion, {\n      label: 'Get Llama-2 Completion',\n      isEnabled: () =>\n        notebookTracker.currentWidget !== null &&\n        notebookTracker.currentWidget === app.shell.currentWidget,\n      execute: async () => {\n        if (!notebookTracker.activeCell) {\n          return;\n        }\n        const inputCode: string = notebookTracker.activeCell.model.sharedModel.source;\n          console.log(inputCode)\n        try {\n          const response = await requestAPI<{ completions: string }>(\n            'llama2',\n            {\n              body: JSON.stringify({ code: inputCode }),\n              method: 'POST',\n            }\n          );\n            const completions = response.completions;\n            console.log(\"completions\")\n            console.log(completions)\n            \n          notebookTracker.activeCell.model.sharedModel.source = notebookTracker.activeCell.model.sharedModel.source.concat(completions);\n        } catch (error) {\n          console.error('Error fetching code completion:', error);\n        }\n      },\n    });\n\n    // Add the command to the palette.\n    app.contextMenu.addItem({\n      command: CommandIDs.getCompletion,\n      selector: '.jp-Notebook',\n    });\n  },\n};\n\nexport default extension;\n\n\n"],"names":[],"sourceRoot":""}